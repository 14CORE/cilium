apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:
  # This etcd-config contains the etcd endpoints of your cluster. If you use
  # TLS please make sure you uncomment the ca-file line and add the respective
  # certificate has a k8s secret, see explanation below in the comment labeled
  # "ETCD-CERT"
  etcd-config: |-
    ---
    endpoints:
    - https://192.168.33.11:2379
    #
    # In case you want to use TLS in etcd, uncomment the following line
    # and add the certificate as explained in the comment labeled "ETCD-CERT"
    ca-file: '/var/lib/etcd-secrets/etcd-ca'
    #
    # In case you want client to server authentication, uncomment the following
    # lines and add the certificate and key in cilium-etcd-secrets below
    key-file: '/var/lib/etcd-secrets/etcd-client-key'
    cert-file: '/var/lib/etcd-secrets/etcd-client-crt'

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  disable-ipv4: "false"
  sidecar-http-proxy: "false"
---
# The etcd secrets can be populated in kubernetes.
# For more information see: https://kubernetes.io/docs/concepts/configuration/secret
kind: Secret
apiVersion: v1
type: Opaque
metadata:
  name: cilium-etcd-secrets
  namespace: kube-system
data:
  # ETCD-CERT: Each value should contain the whole certificate in base64, on a
  # single line. You can generate the base64 with: $ base64 -w 0 ./ca.pem
  # (the "-w 0" generates the output on a single line)
  etcd-ca: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVTmd6Q2VYVDRhWHk2NFRIck9pUU10Z2lkYWE0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eERUQUxCZ05WQkFvVEJHVjBZMlF4Q3pBSkJnTlZCQXNUQWtOSk1RMHdDd1lEClZRUURFd1JsZEdOa01CNFhEVEU0TURReE9ERXdNVFl3TUZvWERUSXpNRFF4TnpFd01UWXdNRm93WlRFTE1Ba0cKQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVERWTmhiaUJHY21GdQpZMmx6WTI4eERUQUxCZ05WQkFvVEJHVjBZMlF4Q3pBSkJnTlZCQXNUQWtOSk1RMHdDd1lEVlFRREV3UmxkR05rCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMVpxeGNqa3ZhdW1Lcjc0RWtwZ0EKM2p0amVuRUVMN29panlwdy8vbWNVVzYvZXVhSlJJdlNyVWpaSER5ZmdFTjBzdFBqRllyNjJVWnJOazZGNWZ2VAo5NnErMXJPR3U0cy9raWk4QkVncjdoZ0tYWWQ2M3lFMEpKazM2S25zQUtoY3lzOWhTc1RrdzVpdXh4S0Znd1M3CmV2c0VQWEtFZUl1eFcxSkh1TVYydVQ1eGNHdmkwMDY1YWVoMFIxNVNLbDlxU2lXajljdDFNaWMyNVdheDhZY3UKQ0V2YjFIQkZ1LzVEcWNPbW8xZ25zMU83UUJYd3h6cEQyeThOZEFDYjB4MzJhMEZUVFAwdkdLNHFxVy9mZjc1NQpkTnJIb0lGOXFUN090NSs2UVBuWUdBMWZKOVNsWk9YZXlLYjFGNXAyOHpUU213dG0zNzlpeUlNTE5WQkhFUHUyCkV3SURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVcUduVUVQNXozLzhQZVA0NlAreCtRcFN1ai9Nd0h3WURWUjBqQkJnd0ZvQVVxR25VRVA1egozLzhQZVA0NlAreCtRcFN1ai9Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGb3pUNWw4dzJvRnNweWV4emdyCkwxbWZUNUVxVXdNbkI4clFGd050YjdnYlYvdXpDLzJRem1PWWZGRjZQbi95UExVTjFtTWVtTnc0dlpWT09oUkYKSk5CU3MzdzlYVGppcW51eG43a2laNDRBNHQzT0VTeWwzR1BnL1VGbTU3eisxK3g4cGlPZmNOMUdoRjZoakhFSwpmdmxQSURNbzFMOWZ3Mk1DaFFFYVJFSytKMkxMd0hwL012S0dqbFVYWE9kSVIyUld6Zldja2FOQWZHcWNUeTZOCkdHdGcxdXF5NnppNks4NTRaNnNGYzJTSXdCT3M3UUZad0MwRDY4a3YvUXdaLzhaOTJVTUNhcFpYSlgxdUxXeTkKcjEzZ1VtaGdJSy82eWNlNUJSVzVObXMzYXF3NFZqR1F3ZVREa01tdDhCY0kvdnRHU3BodXp5ZytaaUFYWCsvSQpHLzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
  etcd-client-key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBM05QdStyUHdjU3pxOFlNeDlFK3B0ODlVT2s0b2hxTW1TZVViem1lQTJlSGNpWDlyCjZIa1hzQXJ5L3FZWGFNRzVNWG5IZFp0a0V1bU8xQUt3VjdxcWJDN2srcERzT2g0OXBSNWpacUtMZnlnaVhxU3EKMzFBblBBOS9oT1VocW5WcXZiTVdmMDhRV29GbWt4djdXSEFZVC9YanBUMXdlS3k1T1lKYjRTVEdlMTlUT0UwMQpDaUt5alhPZUk5VlZPZnhsbngwSTMwSXRJTDVQQkVJQzR6Y3RpRDd5Y1Q3b2hYbGIvVENpVERhaE15WWVDK2pPCldFSmMrckxlOUE0L2xmOE4wSHlEK25nSVJsa1BkZG5XSHRBTUFSdEhiRXk4eVJoK25iMTR3QUxYdXhkdjIzRHcKejNMamRjUHJNN3JJZzNTaksyYzRtWFFZTElwcWQvWjRsbFFQY1FJREFRQUJBb0lCQVFDL3NSR1FlMGJMVjh5UwozZW90UkVIMWwzcHNLcEN2WDB6TGRLQ1FxZlNHTHJROGYybnlvYnRZVEFqbjJOSVZVNlVwTjZkWGhnNTNCRnZCCjJwdXRiQktvV29UV3Bac0tVRm4remNSSHdlNEo4WkwwU1VrekZPY2FFZklHTU1qcXFZYUJLY2JydUh4ZnRGaVEKZHdmV20yZmZjWG10WlFvUEZ4Q3F4V2h3cG5YTmZUTlFBanJ4UXNERlhYSFFBdTVkWll5aVI0VEs4aWxNQmMydgpLZjBQOVFPT25QNVIxaHpKZzEwRGpMYitvcGxReGQ2UHhDN0RCdzhDb2FCRG5qYjNyUzVYRXhRVjNJWTEwUkxDCkxES1llNHVDcjRXT2FmbXF2anY4dnFRaHFwbFZMVDJxVElaYzJVb044MkRjZUxoem1LT293WkUrU0lIRXdSR0MKeGNuazE2VXBBb0dCQU9jTnIvbG5oUnA3dC9oYmM4QkxNUEJFOWw2c3dYbWI4VW9FUzRuVjMwTURBRXlnaUo1UgpVaUcvcEtpREVsajJVZWhic2dTeFFNOXFEa3dERURxTnRPTWl3NlVtSlVFOHFydnFKeVN6b04xbGU1UEJaNzh0CmpHb00ySFRIVTZPdzByck1sZHZuQVFLS3A2UlI3K0p4UTZrblMrWjFwZ0Y2WWpWdzZIL2ZieDBuQW9HQkFQU3IKbkZqQWZ4TlNRc0d6NEZETExJRGRHMWFXT2JvLzhuOEJrUFF0MEg5NElTYXVGbm9vRG9uaWZ5enZSRTNFTGxQMAoxWlpVZGVKeG1ZQUxqcjVDSE9nUjIxZngzZldlanl6bEZIa0JOZk13cGJRZ2VHWCtTekExaER5SXIvSWVEbkdMCkhaSEQ3eUpTMDdVb1UzblVLTnkwMGw1SUF5LzRnNUFyWTloSkJIMm5Bb0dCQUt3ZndEWjE3ZXhhdWlSa1RJaTEKK3hFaTdyNTh4KzBHUk93MDR1a2QwS0tsTzdYWjZheTNQQTQwTEQvMDFOZzlONnQzazloM0M2YjRoUW9QUmltNApvMGFLQVdHb1Z4eVFTMGlPR1BiNGNpQThsNkRzOVpLd0plaGpCV1dKa0Q5alhMa1g2NVBVTlNabGtKbVRDTGVTClZTdFFRUFRBTkJqcHlQdXl6eUZqbSswRkFvR0JBTzI2NlJrYlFOM0hLZklJRXNhdUF6bmFuTHVQRDl3MlVpcXgKbk9TRXQzZURnOEtQbUd0dERHTlJYZnlOSnpMZ2tac2w0M3BENnA3eGZoSjZLR0lZM3ZsbWtGZHRQUnR3eXZEMgpUT1FlRnd1S2t4Ym9EZFFjTjNaS0tZaWZ6MFZUaXZrc0VMa1hSZjExdVJybWFlV1FEWHdWZmVuNTBvOER5dUdFCkoybDUyUkUxQW9HQkFPSXR1UlR6czJveFBVa3IxOU1ucDU1WGRYQUNiZnZqM1lRTzhCM2FhT0N5VXpWdmxTNEEKamR4MGZhQWZ0a25Qb0c2WklKU0VJanQxL2hWT2c5anYvY21rQm9jd1hWNUZJK1ZCTmVwdkQ5anQrYlo5VTVNNQpOc0tLVnJydTZFQllCMGFqYnFPWVdONHdnM0tvaGVFMkE2UEt6RWkyM1hNWmF4Yk9ZVG41QjJqVwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
  etcd-client-crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQzekNDQXNlZ0F3SUJBZ0lVWm0yNllBODRsNDAyWGxUUXF4TlA0V25LWHhRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eERUQUxCZ05WQkFvVEJHVjBZMlF4Q3pBSkJnTlZCQXNUQWtOSk1RMHdDd1lEClZRUURFd1JsZEdOa01CNFhEVEU0TURReE9ERXdNVFl3TUZvWERURTRNRGN4T0RFM01UWXdNRm93YlRFTE1Ba0cKQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVERWTmhiaUJHY21GdQpZMmx6WTI4eEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXhDekFKQmdOVkJBc1RBa05KTVE4d0RRWURWUVFECkV3WmphV3hwZFcwd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURjMCs3NnMvQngKTE9yeGd6SDBUNm0zejFRNlRpaUdveVpKNVJ2T1o0RFo0ZHlKZjJ2b2VSZXdDdkwrcGhkb3dia3hlY2QxbTJRUwo2WTdVQXJCWHVxcHNMdVQ2a093NkhqMmxIbU5tb290L0tDSmVwS3JmVUNjOEQzK0U1U0dxZFdxOXN4Wi9UeEJhCmdXYVRHL3RZY0JoUDllT2xQWEI0ckxrNWdsdmhKTVo3WDFNNFRUVUtJcktOYzU0ajFWVTUvR1dmSFFqZlFpMGcKdms4RVFnTGpOeTJJUHZKeFB1aUZlVnY5TUtKTU5xRXpKaDRMNk01WVFsejZzdDcwRGorVi93M1FmSVA2ZUFoRwpXUTkxMmRZZTBBd0JHMGRzVEx6SkdINmR2WGpBQXRlN0YyL2JjUERQY3VOMXcrc3p1c2lEZEtNclp6aVpkQmdzCmltcDM5bmlXVkE5eEFnTUJBQUdqZnpCOU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVKcjdlMHJuQwpQMENJWlVuYkw5Y3FUNERwcGlFd0h3WURWUjBqQkJnd0ZvQVVxR25VRVA1ejMvOFBlUDQ2UCt4K1FwU3VqL013CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGVVNQTEN0Nlg0MUYvVUJraXNtTy8zTWJKRkJRaDdyd0p1bkFnOCsKMFg0WnBHNFZHMFZCOW9mSlQxZWFyaEgveERTenhydnJkR3gwcjdEVlA2UVdjb3VwMzB2SS9Sb093M2JDNW8zcAoyekd3MG44RVU4a01PZldvTzdPcXdDK1ZxV0dZTERra2JjWVVCUlRVQ2xXMSsvRk5nbUkxMTdQZTgyUGFsazZaCnA3d3NlTzdwVWVPT1AxdkRmNzNnQXh4TTUvcTFmOG9EZ2hXSTQwRXU1MkpER1krSmtkMHpVOGR3dUlsR1JkZDMKamorZERaZHQ2THM4N0NneXlJcjBWNC9INUZIbi9rQnI1dFhheEErbDRmYnA3K1oyZFNzWXZuTjA3MUNac0tkbQpCTmY2VXVjK2RyL2t5OTlRT3F0VGVVdXpLZnZ5Wjhua1FtMVpReGMyNEt6d3R3dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cilium
  namespace: kube-system
spec:
  updateStrategy:
    type: "RollingUpdate"
    rollingUpdate:
      # Specifies the maximum number of Pods that can be unavailable during the update process.
      # The current default value is 1 or 100% for daemonsets; Adding an explicit value here
      # to avoid confusion, as the default value is specific to the type (daemonset/deployment).
      maxUnavailable: "100%"
  selector:
    matchLabels:
      k8s-app: cilium
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        k8s-app: cilium
        kubernetes.io/cluster-service: "true"
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: >-
          [{"key":"dedicated","operator":"Equal","value":"master","effect":"NoSchedule"}]
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: cilium
      restartPolicy: Always
      containers:
      - image: cilium/cilium:v1.0.0-rc9
        imagePullPolicy: IfNotPresent
        name: cilium-agent
        command: [ "cilium-agent" ]
        args:
          - "--debug=$(CILIUM_DEBUG)"
          - "-t=vxlan"
          - "--kvstore=etcd"
          - "--kvstore-opt=etcd.config=/var/lib/etcd-config/etcd.config"
          - "--disable-ipv4=$(DISABLE_IPV4)"
        ports:
          - name: prometheus
            containerPort: 9090
        lifecycle:
          postStart:
            exec:
              command:
                - "/cni-install.sh"
          preStop:
            exec:
              command:
                - "/cni-uninstall.sh"
        env:
          - name: "K8S_NODE_NAME"
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: "CILIUM_DEBUG"
            valueFrom:
              configMapKeyRef:
                name: cilium-config
                key: debug
          - name: "DISABLE_IPV4"
            valueFrom:
              configMapKeyRef:
                name: cilium-config
                key: disable-ipv4
          - name: "CILIUM_SIDECAR_HTTP_PROXY"
            valueFrom:
              configMapKeyRef:
                name: cilium-config
                key: sidecar-http-proxy
                optional: true
          # Note: this variable is a no-op if not defined, and is used in the
          # prometheus examples.
          - name: "CILIUM_PROMETHEUS_SERVE_ADDR"
            valueFrom:
              configMapKeyRef:
                name: cilium-metrics-config
                optional: true
                key: prometheus-serve-addr
        livenessProbe:
          exec:
            command:
            - cilium
            - status
          # The initial delay for the liveness probe is intentionally large to
          # avoid an endless kill & restart cycle if in the event that the initial
          # bootstrapping takes longer than expected.
          initialDelaySeconds: 120
          failureThreshold: 10
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - cilium
            - status
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
          - name: bpf-maps
            mountPath: /sys/fs/bpf
          - name: cilium-run
            mountPath: /var/run/cilium
          - name: cni-path
            mountPath: /host/opt/cni/bin
          - name: etc-cni-netd
            mountPath: /host/etc/cni/net.d
          - name: docker-socket
            mountPath: /var/run/docker.sock
            readOnly: true
          - name: etcd-config-path
            mountPath: /var/lib/etcd-config
            readOnly: true
          - name: etcd-secrets
            mountPath: /var/lib/etcd-secrets
            readOnly: true
        securityContext:
          capabilities:
            add:
              - "NET_ADMIN"
          privileged: true
      hostNetwork: true
      volumes:
          # To keep state between restarts / upgrades
        - name: cilium-run
          hostPath:
            path: /var/run/cilium
          # To keep state between restarts / upgrades
        - name: bpf-maps
          hostPath:
            path: /sys/fs/bpf
          # To read docker events from the node
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
          # To install cilium cni plugin in the host
        - name: cni-path
          hostPath:
            path: /opt/cni/bin
          # To install cilium cni configuration in the host
        - name: etc-cni-netd
          hostPath:
              path: /etc/cni/net.d
          # To read the etcd config stored in config maps
        - name: etcd-config-path
          configMap:
            name: cilium-config
            items:
            - key: etcd-config
              path: etcd.config
          # To read the k8s etcd secrets in case the user might want to use TLS
        - name: etcd-secrets
          secret:
            secretName: cilium-etcd-secrets
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        value: "true"
      # Mark cilium's pod as critical for rescheduling
      - key: CriticalAddonsOnly
        operator: "Exists"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
- kind: Group
  name: system:nodes
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cilium
rules:
- apiGroups:
  - "networking.k8s.io"
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  - componentstatuses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - extensions
  resources:
  - networkpolicies #FIXME remove this when we drop support for k8s NP-beta GH-1202
  - thirdpartyresources
  - ingresses
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumendpoints
  verbs:
  - "*"
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: cilium
  namespace: kube-system
---
